import javax.swing.*;
import java.awt.*;
import java.util.Scanner;
import java.awt.geom.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Random;

/**
 * Slap21 virus.
 *
 * @author (Ari)
 * @version (16/06/25)
 */
public class Slap21 extends JFrame
{
    int width = 1000;
    int height = 1000;
    int imageX = 150;
    int  imageY = 150;
    String title = "Slap-21 Virus Simulation";
    Timer timer; // Declare the timer as an instance variable

    //GridTile[][] cells = new GridTile[size][size];
    public Slap21()
    {
        //ImageIcon backgroundIcon = new ImageIcon("background.jpg");
        //Image scaleImage = backgroundIcon.getImage().getScaledInstance(100, 100,Image.SCALE_DEFAULT);
        //BufferedImage resizedImage = new BufferedImage(width, height, type);

        
        setTitle(title);
        this.getContentPane().setPreferredSize(new Dimension(width, height));
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
        this.setResizable(false);
        this.pack();
        this.toFront();
        this.setVisible(true);
        //JLabel backgroundLabel = new JLabel(backgroundIcon);
        //backgroundLabel.setLayout(new BorderLayout()); // Or other layout manager
        //backgroundLabel.setBounds(0, 0, width, height); // Set to cover the entire frame
        //this.setContentPane(backgroundLabel);
        
        timer = new Timer(200, new ActionListener()
        {
            int currentGen = 0;
            public void actionPerformed(ActionEvent e) {
                if (currentGen < 50) {
                    currentGen++;
                    int random = (int)Math.ceil(Math.random()*4); // a random number between 1 and 4 but always round up so as not to get 0

                    switch (random){
                        case 1 : imageX = imageX + 50;
                        repaint();
                        System.out.println("\nright");
                        break;
                        case 2 : imageX = imageX - 50;
                        repaint();
                         System.out.println("\nleft");
                        break;
                        case 3 : imageY = imageY + 50;
                        repaint();
                        System.out.println("\ndown");
                        break;
                        case 4 : imageY = imageY - 50;
                        repaint();
                        System.out.println("\nup");
                        break;
                    }
                    System.out.print("\nGeneration " + currentGen);
                    if (imageX<0){
                        imageX = imageX + 50;
                    } else if(imageX>800) {
                        imageX = imageX - 50;
                    } else if (imageY<0){
                        imageY = imageY + 50;
                    } else if (imageY>750){
                        imageY = imageY - 50;
                    }
                    
                    repaint();
                } else {
                    ((Timer) e.getSource()).stop(); // stops the simulation
                }
            }
        }
        );
        timer.start();
        
        
    }
    public void paint(Graphics g) {
        ImageIcon blackCircle = new ImageIcon("Black circle.png");
        
        int width = blackCircle.getIconWidth(); 
        int height = blackCircle.getIconHeight();
        
        super.paint(g);
        blackCircle.paintIcon(this, g, imageX, imageY);
    }
    public void moveImage(){
        for (int i = 0; i>5; i++){
            try{
                int random = (int)Math.round(Math.random()*4);

                switch (random){
                    case 0 : imageX = imageX + 200;
                    repaint();
                    System.out.println("right");
                    break;
                    case 1 : imageX = imageX - 200;
                    repaint();
                     System.out.println("right");
                    break;
                    case 2 : imageY = imageY + 200;
                    repaint();
                    System.out.println("right");
                    break;
                    case 3 : imageY = imageY - 200;
                    repaint();
                    System.out.println("right");
                    break;
                }
            }
            catch (Exception ie){
                ie.printStackTrace();
            }
            
            
        }
    }
}
